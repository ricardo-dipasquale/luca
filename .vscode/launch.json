{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Orchestrator Interactive Mode",
            "type": "debugpy",
            "request": "launch",
            "module": "orchestrator.local_runner",
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}",
            "args": ["interactive"],
            "env": {
                "PYTHONPATH": "${workspaceFolder}"
            }
        },
        {
            "name": "Orchestrator Single Message",
            "type": "debugpy",
            "request": "launch",
            "module": "orchestrator.local_runner",
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}",
            "args": [
                "single",
                "--subject", "Bases de Datos Relacionales",
                "En la práctica 2, ej 1.d, no sé cómo hacer bien un left join que traiga de clientes todos los registros y que del lado de ventas traiga los que tienen nulo, así me quedo con los clientes que no compraron cosas, no?"
            ],
            "env": {
                "PYTHONPATH": "${workspaceFolder}"
            }
        },
        {
            "name": "Orchestrator Intent Test",
            "type": "debugpy",
            "request": "launch",
            "module": "orchestrator.local_runner",
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}",
            "args": ["intent-test"],
            "env": {
                "PYTHONPATH": "${workspaceFolder}"
            }
        },
        {
            "name": "GapAnalyzer Local Runner",
            "type": "debugpy",
            "request": "launch",
            "module": "gapanalyzer.local_runner",
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}",
            "args": [
                "2",
                "1.d",
                "No sé cómo hacer bien un left join que traiga de clientes todos los registros y que del lado de ventas traiga los que tienen nulo, así me quedo con los clientes que no compraron cosas, no?"
            ],
            "env": {
                "PYTHONPATH": "${workspaceFolder}"
            }
        },
        {
            "name": "Orchestrator Server",
            "type": "debugpy",
            "request": "launch",
            "module": "orchestrator",
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}",
            "args": [
                "--host", "localhost",
                "--port", "10001",
                "--debug"
            ],
            "env": {
                "PYTHONPATH": "${workspaceFolder}"
            }
        },
        {
            "name": "GapAnalyzer Server",
            "type": "debugpy",
            "request": "launch",
            "module": "gapanalyzer",
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}",
            "args": [
                "--host", "localhost",
                "--port", "10000",
                "--debug"
            ],
            "env": {
                "PYTHONPATH": "${workspaceFolder}"
            }
        },
        {
            "name": "LUCA Frontend (Streamlit)",
            "type": "debugpy",
            "request": "launch",
            "module": "streamlit",
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}/frontend",
            "args": [
                "run",
                "app.py",
                "--server.port=8501",
                "--server.address=localhost",
                "--server.headless=false",
                "--theme.base=light",
                "--theme.primaryColor=#007bff"
            ],
            "env": {
                "PYTHONPATH": "${workspaceFolder}"
            }
        },
        {
            "name": "Frontend Test Suite",
            "type": "debugpy",
            "request": "launch",
            "program": "${workspaceFolder}/frontend/test_frontend.py",
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}/frontend",
            "env": {
                "PYTHONPATH": "${workspaceFolder}"
            }
        },
        {
            "name": "Python: Current File",
            "type": "debugpy",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "cwd": "${workspaceFolder}",
            "env": {
                "PYTHONPATH": "${workspaceFolder}"
            }
        }
    ]
}