[project]
name = "luca-agent"
version = "0.1.0"
description = "LUCA - Educational AI Assistant with Multi-Agent Architecture"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    # Core framework
    "a2a-sdk==0.2.8",
    "click>=8.1.8",
    "httpx>=0.28.1",
    "pydantic>=2.10.6",
    "python-dotenv>=1.1.0",
    "uvicorn>=0.34.2",
    
    # AI and LLM
    "langchain>=0.3.0",
    "langgraph>=0.3.18",
    "langchain-openai>=0.1.0",
    "openai>=1.0.0",
    
    # Database
    "neo4j>=5.0.0",
    "pandas>=2.0.0",
    "openpyxl>=3.0.0",
    
    # Observability
    "langfuse>=2.0.0",
    
    # Frontend
    "streamlit>=1.28.0",
    "aiohttp>=3.8.0",
    "pillow>=9.0.0",
    
    # Testing
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.0.0",
    
    # Tools and utilities
    "uv>=0.1.0",
    "mcp-neo4j-cypher>=0.1.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[project.scripts]
luca-frontend = "frontend.run:main"
luca-orchestrator = "orchestrator.__main__:main"
luca-gapanalyzer = "gapanalyzer.__main__:main"

[tool.hatch.build.targets.wheel]
packages = ["frontend", "orchestrator", "gapanalyzer", "kg", "tools"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["test", "frontend"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.black]
line-length = 88
target-version = ["py312"]
